---
title: "Data Checks"
date: today
---

```{r setup}
library(tidyverse)
devtools::load_all()
df <- assembleData(.test = F, out = "fullData", binaryOut = TRUE)
df <- readRDS("fullData.Rds")
```

# Missingness
```{r}


df %>%
  select(1:9, 16:21, 23:24,27) %>%
  reframe(across(everything(), function(x) mean(is.na(x))), .by = Study) %>%
  kable(digits=2) %>%
  kableExtra::kable_paper()
```

Notes on missingness:
- GLENDA
  - Has ~50% missingness
- SeaBird
  - Can't locate station depth in their files
- NCCA
  - Secchi missing sample depth because it is an integrated sample (over water column)

- CSMI
  - 2010
    - Lat/Lon reported only to nearest whole number 
      - there are real Lat/ real Lon in smpstts10.xls, but not sure what they mean
    - Lat/Lon/depth/sampleDate partially missing because odd reporting in file
      - Can we use forward filling to fill in the missing values?
    - Can't find sampleDepth
      - Just report the water layer

  - 2015 
    - It actually just has a lot of missing WQ 
      - I'm guessing this is because if CTD was measured and WQ wasn't they still record it as a NA
  - 2021
    - actually has ~50% missingness


```{r}
GLENDA %>%
  filter(Study == "GLENDA", is.na(RESULT)) %>%
  count(CodeName, ConversionFactor, is.na(as.numeric(RESULTstart))) %>%
  print(n = 64)
```

# Check CodeName Missingness

# Check CodeName / Analyte combos


# Check Units missingness


# Check target/rpoerted units and conversion factor


# Position missingness


# Full table of missingness

# Missingness by data source

# Flags
```{r flags}
flags <- df %>%
  distinct(Study, QAcode, QAcomment) %>%
  separate_longer_delim(QAcode, delim = ";") %>%
  separate_longer_delim(QAcomment, delim = ";") %>%
  mutate(
    QAcode = str_remove_all(QAcode, "NA,"),
    QAcode = str_remove_all(QAcode, " NA,"),
    QAcomment = str_remove_all(QAcomment, "NA,"),
    QAcomment = str_remove_all(QAcomment, ", NA"),
    QAcomment = str_remove_all(QAcomment, " NA"),
    QAcode = str_trim(QAcode),
    QAcomment = str_trim(QAcomment),
    QAcode = ifelse(grepl("^NA", QAcode, ignore.case =T), NA, QAcode),
    QAcomment = ifelse(grepl("^NA", QAcomment, ignore.case =T), NA, QAcomment),
    QAcode = str_trim(QAcode),
    QAcomment = str_trim(QAcomment),
    ) %>%
  filter((!is.na(QAcode))  | (!is.na(QAcomment)))
```


# Duplicates
```{r duplicates}

removedDup <- df %>%  # 11877651 partial observations
  dplyr::distinct() %>% # 11853750 
  dplyr::reframe(
    .by = c(UID, Study, SITE_ID, Latitude, Longitude, sampleDepth, stationDepth, sampleDateTime, CodeName, LongName, TargetUnits),
    across(c(RESULT, MDL, MRL, PQL), mean, na.rm=T))

    )
  filter(n() > 1, .by = c(Longitude, Latitude, sampleDepth, CodeName, sampleDateTime)) # 6683746

suspectedDup %>%
  select(Study, Latitude, Longitude, sampleDepth, CodeName, sampleDateTime, RESULT)

removedObviousdups <- df %>% dplyr::distinct()

```