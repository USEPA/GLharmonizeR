---
title: "Full Data Summary"
format: 
  html:
    self-contained: true
execute: 
  cache: true
---

```{r setup}
# File paths
# NCCA
#NCCAhydrofiles2010 = c("https://www.epa.gov/sites/default/files/2016-01/assessed_ncca2010_hydrolab.csv"# , 
# Not using not assessed data after Hugh's suggestion
#"https://www.epa.gov/sites/default/files/2016-01/not_assessed_ncca2010_hydrolab.csv"
#)
#NCCAhydrofile2015 = "https://www.epa.gov/sites/default/files/2021-04/ncca_2015_hydrographic_profile_great_lakes-data.csv"
#NCCAsecchifile2015 = "https://www.epa.gov/sites/default/files/2021-04/ncca_2015_secchi_great_lakes-data.csv" 
NCCAhydrofiles2010 <- c(file.path("Data", "NCCA", "assessed_ncca2010_hydrolab.csv"))
NCCAhydrofile2015  <- file.path("Data", "NCCA", "ncca_2015_hydrographic_profile_great_lakes-data.csv")
NCCAsecchifile2015 <- file.path("Data", "NCCA", "ncca_2015_secchi_great_lakes-data.csv")

#NCCA WQ files
ncca2010sites <- file.path("Data", "NCCA", "assessed_ncca2010_siteinfo.revised.06212016.csv")
ncca2015sites <- file.path("Data", "NCCA", "ncca_2015_site_information_great_lakes-data.csv")
ncca2015siteFile <- file.path("Data", "NCCA", "ncca_2015_site_information_great_lakes-data.csv")
tenFiles<- c(file.path("Data", "NCCA", "assessed_ncca2010_waterchem.csv")# , file.path("Data", "NCCA", "nassessedWaterChem2010.csv")
            )
tenQAfile <- file.path("Data", "NCCA", "ncca_qa_codes.csv")
fifteenFiles <- file.path("Data", "NCCA", "ncca_2015_water_chemistry_great_lakes-data.csv")


# GLENDA 
glendaData <- file.path("Data", "GLENDA", "GLENDA.Rds")

# L drive data
# csmi2010 <- file.path("L:", "Priv", "Great lakes Coastal", "2002-2010 Water Quality", "2010")
# csmi2015 <- file.path("L:", "Priv", "Great lakes Coastal", "2015 CSMI Lake Michigan",
#   "WQ data and database", "CSMI data & database", "CSMI_LkMich2015_Database_working_minsRivMouths.accdb")
# csmi2021 <- file.path("C:", "Users", "ccoffman", "Environmental Protection Agency (EPA)",
#   "Lake Michign ML - General", "Raw_data", "CSMI", "2021")
# namingFile <- file.path(
#   "C:", "Users", "ccoffman", "Environmental Protection Agency (EPA)", "Lake Michigan ML - General", "Results", "Analytes3.xlsx"
# )
csmi2010 <- file.path("Data", "CSMI", "2010")
csmi2015 <- file.path("Data", "CSMI", "CSMI2015_newQuery.accdb")
csmi2021 <- file.path("Data", "CSMI", "2021")

namingFile <- file.path("C:", "Users", "ccoffman", "Environmental Protection Agency (EPA)", "Lake Michigan ML - General", "Results", "Analytes3.xlsx")
#namingFile <- file.path("C:", "Users", "ccoffman", "Environmental Protection Agency (EPA)", "Lake Michigan ML - General", "Results", "Analytes3_chargeRemoved.xlsx")






library(tidyverse)
library(kableExtra)
library(ggh4x) # rescale facet plots
# Load in the package we're developing
library(devtools)
load_all()

df <- LoadWQdata(NCCAhydrofiles2010, NCCAhydrofile2015, NCCAsecchifile2015, ncca2010sites, ncca2015sites, tenFiles, tenQAfile, fifteenFiles, glendaData,
                         csmi2010, csmi2015, csmi2021, namingFile)
```



# Time
The temporal coverage of measurements

```{r timePlots}
df %>% 
  ggplot(aes(x = sampleDate, y = factor(CodeName), col = Study)) +
  geom_jitter() + 
  ylab("")
```


# Space
Spatial descriptions of dataset is plotted for Chla measurements. 

## Geographic

```{r singleSpatial}
#| fig-cap: Aggregate spatial distribution of Chla. Map data taken from https://www.naturalearthdata.com/downloads/50m-physical-vectors/

lakes <- sf::read_sf("Data/ne_50m_lakes/ne_50m_lakes.shp")

ggplot(lakes) +
  geom_sf(fill = "lightblue") +
  coord_sf(xlim = c(-88, -84.9), ylim = c(41.7, 46)) +
  theme(panel.background = element_rect(fill = '#d0d890'),
        panel.grid = element_line(color = '#00000010')) +
  geom_jitter(data= df %>% filter(CodeName == "Chla"), aes(y = Latitude, x = Longitude), size=  3)
```

```{r facetedSpatial}
#| fig-cap: Aggregate spatial distribution of Chla per year.
 
df %>% 
  filter(CodeName == "Chla") %>%
  ggplot() +
  geom_jitter(aes(y = Latitude, x = Longitude), size=  3) +
  geom_sf(data = lakes, fill = "lightblue") + 
  coord_sf(xlim = c(-88, -84.9), ylim = c(41.7, 46)) + 
  theme(panel.background = element_rect(fill = '#d0d890'),
        panel.grid = element_line(color = '#00000010')) +
  facet_wrap(~year(sampleDate))
```

```{r latlonPrecision}
df %>% 
  mutate(
    Latitude = as.character(Latitude),
    lat_dec = nchar(str_split_i(Latitude, "\\.", i =2)),
    Longitude = as.character(Longitude),
    lon_dec = nchar(str_split_i(Longitude, "\\.", i = 2))) %>%
  select(lat_dec, lon_dec) %>%
  pivot_longer(cols = c(lat_dec, lon_dec), values_to = "decimals", names_to = "coord") %>%
  ggplot(aes(x = decimals, fill = coord)) +
  geom_bar(position = "dodge") + 
  ggtitle("Decimal places for coordinates")
```


## Depth

```{r depth}
#| fig-cap: Aggregate sampling depth of Chla per year.

df %>% 
  filter(CodeName == "Chla") %>%
  ggplot(aes(x = sampleDepth)) + 
  geom_histogram()
```


# Sample summaries

```{r sampleTableSummaries}
df %>% 
  count(CodeName) %>%
  kable() %>%
  kable_paper

```


## Distributions

```{r distributions}
#| fig-cap: Distributions for each analyte colored by the WQX category. 

df %>%
  mutate(RESULT = ifelse((CodeName == "Secchi") & (RESULT == -9), NA, RESULT)) %>%
  filter(Category == "Chemical_Physical") %>%
  ggplot(aes(x = RESULT, fill = Category)) + 
  geom_histogram(aes(y = ..density..)) +
  ggh4x::facet_wrap2(~ Category + CodeName, scales = "free")
df %>%
  mutate(RESULT = ifelse((CodeName == "Secchi") & (RESULT == -9), NA, RESULT)) %>%
  filter(Category == "Clarity_Carbon") %>%
  ggplot(aes(x = RESULT, fill = Category)) + 
  geom_histogram(aes(y = ..density..)) +
  ggh4x::facet_wrap2(~ Category + CodeName, scales = "free")
df %>%
  mutate(RESULT = ifelse((CodeName == "Secchi") & (RESULT == -9), NA, RESULT)) %>%
  filter(Category == "Nutrients_Algae") %>%
  ggplot(aes(x = RESULT, fill = Category)) + 
  geom_histogram(aes(y = ..density..)) +
  ggh4x::facet_wrap2(~ Category + CodeName, scales = "free")
df %>%
  mutate(RESULT = ifelse((CodeName == "Secchi") & (RESULT == -9), NA, RESULT)) %>%
  filter(is.na(Category)) %>%
  ggplot(aes(x = RESULT, fill = Category)) + 
  geom_histogram(aes(y = ..density..)) +
  ggh4x::facet_wrap2(~ Category + CodeName, scales = "free")

```



## Correlations

```{r correlations}
wideDf <- df %>%
  mutate(RESULT = ifelse((CodeName == "Secchi") & (RESULT == -9), NA, RESULT)) %>%
  select(CodeName, RESULT, Study, sampleDate, Latitude, Longitude, sampleDepth, stationDepth) %>%
  reframe(RESULT = mean(RESULT, na.rm = T), .by = c(Study, sampleDate, Latitude, Longitude, sampleDepth, CodeName, stationDepth)) %>%
  pivot_wider(id_cols = c(Study, sampleDate, Latitude, Longitude, sampleDepth, stationDepth), names_from = CodeName, values_from = RESULT) %>%
  mutate(Secchi = ifelse(is.na(Secchi), mean(Secchi, na.rm = T), Secchi), .by = c(Study, sampleDate, Latitude, Longitude, stationDepth))

correlations <- wideDf %>%
  select(-c(Study, sampleDate, Latitude, Longitude, sampleDepth)) %>%
  cor(use = "pairwise.complete.obs")

ggcorrplot::ggcorrplot(correlations, method = "square", type = "upper")
```




## Simple model
- Too memory intensive


```{r}
#endregion RandomForestsGLS::RFGLS_estimate_spatial(coords = as.matrix(wideDf[c("Latitude", "Longitude")]), 
#   y = as.matrix(wideDf["Chla"]),
#   X = as.matrix(wideDf[c("stationDepth", "Temp", "DO", "pH", "Secchi")]))

```

